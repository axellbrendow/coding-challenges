Forgot to convert double expression to integer at the end (int)(1.0/2 * 3)

Forgot to use a visited array or matrix in DFS or BFS algorithms

Binary search doesn't necessarily need mid and array[mid]. Sometimes mid itself is the search space.

Division by 0

Pay attention to overflows in SUMS, SUBTRACTIONS (YES), MULTIPLICATIONS and DIVISIONS
NOT ONLY ON ARRAY QUESTIONS, PAY ATTENTION TO THIS IN ALL TYPES OF QUESTIONS!!!

Not thinking carefully about changing the pointers of all nodes in a LinkedList
  Always make sure to change the pointers to where you would expect them to be

Considering that node.next or node.next.next is safe to access or assign

Creating a head ListNode and moving head instead of using head and curr and moving curr only

Returning left subtree path or right subtree path as paths that pass through the current node incorrectly
e.g. return Math.max(root.val, *leftPath*, *rightPath*, root.val + leftPath + rightPath)
That is invalid. root.val should always be in the sum. If root.val is not in the sum, than that's not a valid
path to return to the parent

Not ensuring that heaps will always have k elements at least. For example: calling heap.poll() even though heap.size() < k
